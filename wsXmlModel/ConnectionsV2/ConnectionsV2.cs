////////////////////////////////////////////////////////////////////////
//
// ConnectionsV2.cs
//
// This file was generated by XMLSpy 2008r2sp2 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////
		
namespace ConnectionsV2
{
	abstract class EnumeratorBase : System.Collections.IEnumerator
	{
		System.Collections.IEnumerator inner;

		protected object InnerCurrent { get { return inner.Current; } }

		public EnumeratorBase(System.Collections.IEnumerator inner)
		{
			this.inner = inner;
		}

		public abstract object Current { get; }// { return new NumberType((System.Xml.XmlNode)inner.Current); } }
		public bool MoveNext() { return inner.MoveNext(); }
		public void Reset() { inner.Reset(); }
	}


	public class ConnectionsV22 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_altova_ConnectionsV22]); }}


		public static ConnectionsV22 LoadFromFile(string filename) 
		{
			return new ConnectionsV22(Altova.Xml.XmlTreeOperations.LoadDocument(filename));			
		}

		public static ConnectionsV22 LoadFromString(string xmlstring) 
		{
			return new ConnectionsV22(Altova.Xml.XmlTreeOperations.LoadXml(xmlstring));			
		}

		public static ConnectionsV22 LoadFromBinary(byte[] binary) 
		{
			return new ConnectionsV22(Altova.Xml.XmlTreeOperations.LoadXmlBinary(binary));			
		}

		public void SaveToFile(string filename, bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint);
				else
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, prettyPrint);
			}
			else
				Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint);
		}

		public void SaveToFile(string filename, bool prettyPrint, string encoding)
		{
			SaveToFile( filename, prettyPrint, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0 );
		}

		public void SaveToFile(string filename, bool prettyPrint, string encoding, bool bBigEndian, bool bBOM)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, bBigEndian, bBOM, prettyPrint);
		}

		public string SaveToString(bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXml(doc, prettyPrint);
		}

		public byte[] SaveToBinary(bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
				else
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, prettyPrint);
			}
			else
				return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding)
		{
			return SaveToBinary( prettyPrint, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0 );
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding, bool bBigEndian, bool bBOM)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, bBigEndian, bBOM, prettyPrint);
		}

		public static ConnectionsV22 CreateDocument()
		{	
			return CreateDocument("UTF-8");
		}

		public static ConnectionsV22 CreateDocument(string encoding)
		{
			System.Xml.XmlDocument doc = new System.Xml.XmlDocument();
			doc.AppendChild(doc.CreateXmlDeclaration("1.0", encoding, null));
			return new ConnectionsV22(doc);
		}

		public void SetDTDLocation(string dtdLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			string publicId = null;
			string internalSubset = null;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetDTDLocation requires a root element.");
			if (doc.DocumentType != null)
			{
				publicId = doc.DocumentType.PublicId;
				internalSubset = doc.DocumentType.InternalSubset;

				doc.RemoveChild(doc.DocumentType);
			}
			doc.InsertBefore(doc.DocumentElement, doc.CreateDocumentType(doc.DocumentElement.Name, publicId, dtdLocation, internalSubset));
		}

		public void SetSchemaLocation(string schemaLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetSchemaLocation requires a root element.");
			System.Xml.XmlAttribute att;
			if (doc.DocumentElement.NamespaceURI == "")
			{
				att = doc.CreateAttribute("xsi", "noNamespaceSchemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = schemaLocation;
			}	
			else
			{
				att = doc.CreateAttribute("xsi", "schemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = doc.DocumentElement.NamespaceURI + " " + schemaLocation;
			}
			doc.DocumentElement.Attributes.Append(att);
		}
	
	
		public ConnectionsV22(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Connection = new MemberElement_Connection (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionsV22_altova_Connection]);
			ID = new MemberElement_ID (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionsV22_altova_ID]);
			Password = new MemberElement_Password (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionsV22_altova_Password]);
			Persist = new MemberElement_Persist (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionsV22_altova_Persist]);
			Server = new MemberElement_Server (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionsV22_altova_Server]);
			SqlSecurity = new MemberElement_SqlSecurity (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionsV22_altova_SqlSecurity]);
			UserName = new MemberElement_UserName (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionsV22_altova_UserName]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ConnectionsV22((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Connection Connection;
		public class MemberElement_Connection : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Connection (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ConnectionType this [int i] { get { return At(i);} } 
			public ConnectionType At(int index) {return new ConnectionType(owner.GetElementAt(info, index));}
			public ConnectionType First { get  {return new ConnectionType(owner.GetElementFirst(info));} }
			public ConnectionType Last { get {return new ConnectionType(owner.GetElementLast(info));} }
			public ConnectionType Append(){return new ConnectionType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ConnectionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ID ID;
		public class MemberElement_ID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public IDType this [int i] { get { return At(i);} } 
			public IDType At(int index) {return new IDType(owner.GetElementAt(info, index));}
			public IDType First { get  {return new IDType(owner.GetElementFirst(info));} }
			public IDType Last { get {return new IDType(owner.GetElementLast(info));} }
			public IDType Append(){return new IDType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new IDType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Password Password;
		public class MemberElement_Password : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Password (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Persist Persist;
		public class MemberElement_Persist : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Persist (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.booleanType this [int i] { get { return At(i);} } 
			public xs.booleanType At(int index) {return new xs.booleanType(owner.GetElementAt(info, index));}
			public xs.booleanType First { get  {return new xs.booleanType(owner.GetElementFirst(info));} }
			public xs.booleanType Last { get {return new xs.booleanType(owner.GetElementLast(info));} }
			public xs.booleanType Append(){return new xs.booleanType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.booleanType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Server Server;
		public class MemberElement_Server : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Server (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ServerType this [int i] { get { return At(i);} } 
			public ServerType At(int index) {return new ServerType(owner.GetElementAt(info, index));}
			public ServerType First { get  {return new ServerType(owner.GetElementFirst(info));} }
			public ServerType Last { get {return new ServerType(owner.GetElementLast(info));} }
			public ServerType Append(){return new ServerType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ServerType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SqlSecurity SqlSecurity;
		public class MemberElement_SqlSecurity : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SqlSecurity (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.booleanType this [int i] { get { return At(i);} } 
			public xs.booleanType At(int index) {return new xs.booleanType(owner.GetElementAt(info, index));}
			public xs.booleanType First { get  {return new xs.booleanType(owner.GetElementFirst(info));} }
			public xs.booleanType Last { get {return new xs.booleanType(owner.GetElementLast(info));} }
			public xs.booleanType Append(){return new xs.booleanType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.booleanType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_UserName UserName;
		public class MemberElement_UserName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_UserName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public UserNameType this [int i] { get { return At(i);} } 
			public UserNameType At(int index) {return new UserNameType(owner.GetElementAt(info, index));}
			public UserNameType First { get  {return new UserNameType(owner.GetElementFirst(info));} }
			public UserNameType Last { get {return new UserNameType(owner.GetElementLast(info));} }
			public UserNameType Append(){return new UserNameType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new UserNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ConnectionsV2", "")); 				
		}
		
	} // class ConnectionsV22
	public class ConnectionType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_altova_ConnectionType]); }}

	
		public ConnectionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Connection = new MemberElement_Connection (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionType_altova_Connection]);
			ID = new MemberElement_ID (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionType_altova_ID]);
			Persist = new MemberElement_Persist (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionType_altova_Persist]);
			Server = new MemberElement_Server (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionType_altova_Server]);
			SqlSecurity = new MemberElement_SqlSecurity (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionType_altova_SqlSecurity]);
			UserName = new MemberElement_UserName (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionType_altova_UserName]);
			Password = new MemberElement_Password (this, ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ConnectionType_altova_Password]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ConnectionType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Connection Connection;
		public class MemberElement_Connection : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Connection (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ConnectionType this [int i] { get { return At(i);} } 
			public ConnectionType At(int index) {return new ConnectionType(owner.GetElementAt(info, index));}
			public ConnectionType First { get  {return new ConnectionType(owner.GetElementFirst(info));} }
			public ConnectionType Last { get {return new ConnectionType(owner.GetElementLast(info));} }
			public ConnectionType Append(){return new ConnectionType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ConnectionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ID ID;
		public class MemberElement_ID : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ID (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public IDType this [int i] { get { return At(i);} } 
			public IDType At(int index) {return new IDType(owner.GetElementAt(info, index));}
			public IDType First { get  {return new IDType(owner.GetElementFirst(info));} }
			public IDType Last { get {return new IDType(owner.GetElementLast(info));} }
			public IDType Append(){return new IDType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new IDType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Persist Persist;
		public class MemberElement_Persist : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Persist (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.booleanType this [int i] { get { return At(i);} } 
			public xs.booleanType At(int index) {return new xs.booleanType(owner.GetElementAt(info, index));}
			public xs.booleanType First { get  {return new xs.booleanType(owner.GetElementFirst(info));} }
			public xs.booleanType Last { get {return new xs.booleanType(owner.GetElementLast(info));} }
			public xs.booleanType Append(){return new xs.booleanType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.booleanType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Server Server;
		public class MemberElement_Server : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Server (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ServerType this [int i] { get { return At(i);} } 
			public ServerType At(int index) {return new ServerType(owner.GetElementAt(info, index));}
			public ServerType First { get  {return new ServerType(owner.GetElementFirst(info));} }
			public ServerType Last { get {return new ServerType(owner.GetElementLast(info));} }
			public ServerType Append(){return new ServerType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ServerType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_SqlSecurity SqlSecurity;
		public class MemberElement_SqlSecurity : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_SqlSecurity (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.booleanType this [int i] { get { return At(i);} } 
			public xs.booleanType At(int index) {return new xs.booleanType(owner.GetElementAt(info, index));}
			public xs.booleanType First { get  {return new xs.booleanType(owner.GetElementFirst(info));} }
			public xs.booleanType Last { get {return new xs.booleanType(owner.GetElementLast(info));} }
			public xs.booleanType Append(){return new xs.booleanType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.booleanType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_UserName UserName;
		public class MemberElement_UserName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_UserName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public UserNameType this [int i] { get { return At(i);} } 
			public UserNameType At(int index) {return new UserNameType(owner.GetElementAt(info, index));}
			public UserNameType First { get  {return new UserNameType(owner.GetElementFirst(info));} }
			public UserNameType Last { get {return new UserNameType(owner.GetElementLast(info));} }
			public UserNameType Append(){return new UserNameType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new UserNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Password Password;
		public class MemberElement_Password : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Password (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class ConnectionType
	public class IDType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_altova_IDType]); }}

	
		public IDType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new IDType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_IDType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_IDType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class IDType
	public class ServerType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_altova_ServerType]); }}

	
		public ServerType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ServerType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ServerType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_ServerType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class ServerType
	public class UserNameType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_altova_UserNameType]); }}

	
		public UserNameType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new UserNameType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_UserNameType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_altova_UserNameType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class UserNameType

namespace xs
{	
	public class ENTITIES : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_ENTITIES]); }}

	
		public ENTITIES(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITIES
	public class ENTITY : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_ENTITY]); }}

	
		public ENTITY(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITY
	public class ID : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_ID]); }}

	
		public ID(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ID
	public class IDREF : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_IDREF]); }}

	
		public IDREF(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREF
	public class IDREFS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_IDREFS]); }}

	
		public IDREFS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREFS
	public class NCName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_NCName]); }}

	
		public NCName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NCName
	public class NMTOKEN : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_NMTOKEN]); }}

	
		public NMTOKEN(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKEN
	public class NMTOKENS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_NMTOKENS]); }}

	
		public NMTOKENS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKENS
	public class NOTATION : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_NOTATION]); }}

	
		public NOTATION(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NOTATION
	public class Name : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_Name]); }}

	
		public Name(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class Name
	public class QName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_QName]); }}

	
		public QName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class QName
	public class anySimpleType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_anySimpleType]); }}

	
		public anySimpleType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anySimpleType
	public class anyType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_anyType]); }}

	
		public anyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new anyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anyType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class anyType
	public class anyURI : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_anyURI]); }}

	
		public anyURI(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anyURI
	public class base64Binary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_base64Binary]); }}

	
		public base64Binary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class base64Binary
	public class boolean : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_boolean]); }}

	
		public boolean(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class boolean
	public class byte2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_byte2]); }}

	
		public byte2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class byte2
	public class date : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_date]); }}

	
		public date(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class date
	public class dateTime : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_dateTime]); }}

	
		public dateTime(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class dateTime
	public class decimal2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_decimal2]); }}

	
		public decimal2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class decimal2
	public class double2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_double2]); }}

	
		public double2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class double2
	public class duration : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_duration]); }}

	
		public duration(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class duration
	public class float2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_float2]); }}

	
		public float2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class float2
	public class gDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_gDay]); }}

	
		public gDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gDay
	public class gMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_gMonth]); }}

	
		public gMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonth
	public class gMonthDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_gMonthDay]); }}

	
		public gMonthDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonthDay
	public class gYear : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_gYear]); }}

	
		public gYear(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYear
	public class gYearMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_gYearMonth]); }}

	
		public gYearMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYearMonth
	public class hexBinary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_hexBinary]); }}

	
		public hexBinary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class hexBinary
	public class int2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_int2]); }}

	
		public int2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class int2
	public class integer : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_integer]); }}

	
		public integer(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class integer
	public class language : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_language]); }}

	
		public language(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class language
	public class long2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_long2]); }}

	
		public long2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class long2
	public class negativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_negativeInteger]); }}

	
		public negativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class negativeInteger
	public class nonNegativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_nonNegativeInteger]); }}

	
		public nonNegativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonNegativeInteger
	public class nonPositiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_nonPositiveInteger]); }}

	
		public nonPositiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonPositiveInteger
	public class normalizedString : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_normalizedString]); }}

	
		public normalizedString(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class normalizedString
	public class positiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_positiveInteger]); }}

	
		public positiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class positiveInteger
	public class short2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_short2]); }}

	
		public short2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class short2
	public class string2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_string2]); }}

	
		public string2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class string2
	public class time : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_time]); }}

	
		public time(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class time
	public class token : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_token]); }}

	
		public token(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class token
	public class unsignedByte : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_unsignedByte]); }}

	
		public unsignedByte(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedByte
	public class unsignedInt : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_unsignedInt]); }}

	
		public unsignedInt(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedInt
	public class unsignedLong : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_unsignedLong]); }}

	
		public unsignedLong(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedLong
	public class unsignedShort : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_unsignedShort]); }}

	
		public unsignedShort(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedShort
	public class booleanType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_booleanType]); }}

	
		public booleanType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new booleanType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public bool Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_xs_altova_booleanType_altova_unnamed];
			return (bool)Altova.Xml.XmlTreeOperations.CastToBool(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_xs_altova_booleanType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("boolean", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class booleanType
	public class stringType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(ConnectionsV2_TypeInfo.binder.Types[ConnectionsV2_TypeInfo._altova_ti_xs_altova_stringType]); }}

	
		public stringType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new stringType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_xs_altova_stringType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = ConnectionsV2_TypeInfo.binder.Members[ConnectionsV2_TypeInfo._altova_mi_xs_altova_stringType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class stringType

} // namespace xs


}

////////////////////////////////////////////////////////////////////////
//
// multiTable2oneXML_spy.cs
//
// This file was generated by XMLSpy 2008r2sp2 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////
		
namespace multiTable2oneXML_spy
{
	abstract class EnumeratorBase : System.Collections.IEnumerator
	{
		System.Collections.IEnumerator inner;

		protected object InnerCurrent { get { return inner.Current; } }

		public EnumeratorBase(System.Collections.IEnumerator inner)
		{
			this.inner = inner;
		}

		public abstract object Current { get; }// { return new NumberType((System.Xml.XmlNode)inner.Current); } }
		public bool MoveNext() { return inner.MoveNext(); }
		public void Reset() { inner.Reset(); }
	}


	public class multiTable2oneXML_spy2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_multiTable2oneXML_spy2]); }}


		public static multiTable2oneXML_spy2 LoadFromFile(string filename) 
		{
			return new multiTable2oneXML_spy2(Altova.Xml.XmlTreeOperations.LoadDocument(filename));			
		}

		public static multiTable2oneXML_spy2 LoadFromString(string xmlstring) 
		{
			return new multiTable2oneXML_spy2(Altova.Xml.XmlTreeOperations.LoadXml(xmlstring));			
		}

		public static multiTable2oneXML_spy2 LoadFromBinary(byte[] binary) 
		{
			return new multiTable2oneXML_spy2(Altova.Xml.XmlTreeOperations.LoadXmlBinary(binary));			
		}

		public void SaveToFile(string filename, bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint);
				else
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, prettyPrint);
			}
			else
				Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint);
		}

		public void SaveToFile(string filename, bool prettyPrint, string encoding)
		{
			SaveToFile( filename, prettyPrint, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0 );
		}

		public void SaveToFile(string filename, bool prettyPrint, string encoding, bool bBigEndian, bool bBOM)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, bBigEndian, bBOM, prettyPrint);
		}

		public string SaveToString(bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXml(doc, prettyPrint);
		}

		public byte[] SaveToBinary(bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
				else
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, prettyPrint);
			}
			else
				return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding)
		{
			return SaveToBinary( prettyPrint, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0 );
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding, bool bBigEndian, bool bBOM)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, bBigEndian, bBOM, prettyPrint);
		}

		public static multiTable2oneXML_spy2 CreateDocument()
		{	
			return CreateDocument("UTF-8");
		}

		public static multiTable2oneXML_spy2 CreateDocument(string encoding)
		{
			System.Xml.XmlDocument doc = new System.Xml.XmlDocument();
			doc.AppendChild(doc.CreateXmlDeclaration("1.0", encoding, null));
			return new multiTable2oneXML_spy2(doc);
		}

		public void SetDTDLocation(string dtdLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			string publicId = null;
			string internalSubset = null;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetDTDLocation requires a root element.");
			if (doc.DocumentType != null)
			{
				publicId = doc.DocumentType.PublicId;
				internalSubset = doc.DocumentType.InternalSubset;

				doc.RemoveChild(doc.DocumentType);
			}
			doc.InsertBefore(doc.DocumentElement, doc.CreateDocumentType(doc.DocumentElement.Name, publicId, dtdLocation, internalSubset));
		}

		public void SetSchemaLocation(string schemaLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetSchemaLocation requires a root element.");
			System.Xml.XmlAttribute att;
			if (doc.DocumentElement.NamespaceURI == "")
			{
				att = doc.CreateAttribute("xsi", "noNamespaceSchemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = schemaLocation;
			}	
			else
			{
				att = doc.CreateAttribute("xsi", "schemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = doc.DocumentElement.NamespaceURI + " " + schemaLocation;
			}
			doc.DocumentElement.Attributes.Append(att);
		}
	
	
		public multiTable2oneXML_spy2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			BulkSql = new MemberElement_BulkSql (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_BulkSql]);
			Condition = new MemberElement_Condition (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_Condition]);
			ExpertDefines = new MemberElement_ExpertDefines (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_ExpertDefines]);
			Field = new MemberElement_Field (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_Field]);
			FieldLength = new MemberElement_FieldLength (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_FieldLength]);
			FieldName = new MemberElement_FieldName (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_FieldName]);
			FieldNumber = new MemberElement_FieldNumber (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_FieldNumber]);
			FieldType2 = new MemberElement_FieldType2 (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_FieldType2]);
			FlowDefine = new MemberElement_FlowDefine (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_FlowDefine]);
			FlowDesigners = new MemberElement_FlowDesigners (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_FlowDesigners]);
			FlowDisigner = new MemberElement_FlowDisigner (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_FlowDisigner]);
			FlowExpert = new MemberElement_FlowExpert (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_FlowExpert]);
			FlowLock = new MemberElement_FlowLock (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_FlowLock]);
			FlowName = new MemberElement_FlowName (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_FlowName]);
			Message = new MemberElement_Message (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_Message]);
			MessageLevel = new MemberElement_MessageLevel (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_MessageLevel]);
			MessageNumber = new MemberElement_MessageNumber (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_MessageNumber]);
			MessageParameter = new MemberElement_MessageParameter (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_MessageParameter]);
			MessageStatus = new MemberElement_MessageStatus (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_MessageStatus]);
			MessageType2 = new MemberElement_MessageType2 (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_MessageType2]);
			OutputName = new MemberElement_OutputName (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_OutputName]);
			OutputValues = new MemberElement_OutputValues (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_OutputValues]);
			Protocol = new MemberElement_Protocol (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_Protocol]);
			Sequence = new MemberElement_Sequence (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_Sequence]);
			StreamNodes = new MemberElement_StreamNodes (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_multiTable2oneXML_spy2_altova_StreamNodes]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new multiTable2oneXML_spy2((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_BulkSql BulkSql;
		public class MemberElement_BulkSql : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_BulkSql (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public BulkSqlType this [int i] { get { return At(i);} } 
			public BulkSqlType At(int index) {return new BulkSqlType(owner.GetElementAt(info, index));}
			public BulkSqlType First { get  {return new BulkSqlType(owner.GetElementFirst(info));} }
			public BulkSqlType Last { get {return new BulkSqlType(owner.GetElementLast(info));} }
			public BulkSqlType Append(){return new BulkSqlType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new BulkSqlType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Condition Condition;
		public class MemberElement_Condition : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Condition (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ConditionType this [int i] { get { return At(i);} } 
			public ConditionType At(int index) {return new ConditionType(owner.GetElementAt(info, index));}
			public ConditionType First { get  {return new ConditionType(owner.GetElementFirst(info));} }
			public ConditionType Last { get {return new ConditionType(owner.GetElementLast(info));} }
			public ConditionType Append(){return new ConditionType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ConditionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ExpertDefines ExpertDefines;
		public class MemberElement_ExpertDefines : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ExpertDefines (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ExpertDefinesType this [int i] { get { return At(i);} } 
			public ExpertDefinesType At(int index) {return new ExpertDefinesType(owner.GetElementAt(info, index));}
			public ExpertDefinesType First { get  {return new ExpertDefinesType(owner.GetElementFirst(info));} }
			public ExpertDefinesType Last { get {return new ExpertDefinesType(owner.GetElementLast(info));} }
			public ExpertDefinesType Append(){return new ExpertDefinesType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ExpertDefinesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Field Field;
		public class MemberElement_Field : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Field (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FieldType this [int i] { get { return At(i);} } 
			public FieldType At(int index) {return new FieldType(owner.GetElementAt(info, index));}
			public FieldType First { get  {return new FieldType(owner.GetElementFirst(info));} }
			public FieldType Last { get {return new FieldType(owner.GetElementLast(info));} }
			public FieldType Append(){return new FieldType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FieldType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FieldLength FieldLength;
		public class MemberElement_FieldLength : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FieldLength (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FieldLengthType this [int i] { get { return At(i);} } 
			public FieldLengthType At(int index) {return new FieldLengthType(owner.GetElementAt(info, index));}
			public FieldLengthType First { get  {return new FieldLengthType(owner.GetElementFirst(info));} }
			public FieldLengthType Last { get {return new FieldLengthType(owner.GetElementLast(info));} }
			public FieldLengthType Append(){return new FieldLengthType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FieldLengthType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FieldName FieldName;
		public class MemberElement_FieldName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FieldName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FieldNameType this [int i] { get { return At(i);} } 
			public FieldNameType At(int index) {return new FieldNameType(owner.GetElementAt(info, index));}
			public FieldNameType First { get  {return new FieldNameType(owner.GetElementFirst(info));} }
			public FieldNameType Last { get {return new FieldNameType(owner.GetElementLast(info));} }
			public FieldNameType Append(){return new FieldNameType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FieldNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FieldNumber FieldNumber;
		public class MemberElement_FieldNumber : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FieldNumber (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FieldNumberType this [int i] { get { return At(i);} } 
			public FieldNumberType At(int index) {return new FieldNumberType(owner.GetElementAt(info, index));}
			public FieldNumberType First { get  {return new FieldNumberType(owner.GetElementFirst(info));} }
			public FieldNumberType Last { get {return new FieldNumberType(owner.GetElementLast(info));} }
			public FieldNumberType Append(){return new FieldNumberType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FieldNumberType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FieldType2 FieldType2;
		public class MemberElement_FieldType2 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FieldType2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FieldTypeType this [int i] { get { return At(i);} } 
			public FieldTypeType At(int index) {return new FieldTypeType(owner.GetElementAt(info, index));}
			public FieldTypeType First { get  {return new FieldTypeType(owner.GetElementFirst(info));} }
			public FieldTypeType Last { get {return new FieldTypeType(owner.GetElementLast(info));} }
			public FieldTypeType Append(){return new FieldTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FieldTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FlowDefine FlowDefine;
		public class MemberElement_FlowDefine : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowDefine (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowDefineType this [int i] { get { return At(i);} } 
			public FlowDefineType At(int index) {return new FlowDefineType(owner.GetElementAt(info, index));}
			public FlowDefineType First { get  {return new FlowDefineType(owner.GetElementFirst(info));} }
			public FlowDefineType Last { get {return new FlowDefineType(owner.GetElementLast(info));} }
			public FlowDefineType Append(){return new FlowDefineType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowDefineType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FlowDesigners FlowDesigners;
		public class MemberElement_FlowDesigners : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowDesigners (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowDesignersType this [int i] { get { return At(i);} } 
			public FlowDesignersType At(int index) {return new FlowDesignersType(owner.GetElementAt(info, index));}
			public FlowDesignersType First { get  {return new FlowDesignersType(owner.GetElementFirst(info));} }
			public FlowDesignersType Last { get {return new FlowDesignersType(owner.GetElementLast(info));} }
			public FlowDesignersType Append(){return new FlowDesignersType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowDesignersType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FlowDisigner FlowDisigner;
		public class MemberElement_FlowDisigner : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowDisigner (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowDisignerType this [int i] { get { return At(i);} } 
			public FlowDisignerType At(int index) {return new FlowDisignerType(owner.GetElementAt(info, index));}
			public FlowDisignerType First { get  {return new FlowDisignerType(owner.GetElementFirst(info));} }
			public FlowDisignerType Last { get {return new FlowDisignerType(owner.GetElementLast(info));} }
			public FlowDisignerType Append(){return new FlowDisignerType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowDisignerType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FlowExpert FlowExpert;
		public class MemberElement_FlowExpert : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowExpert (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowExpertType this [int i] { get { return At(i);} } 
			public FlowExpertType At(int index) {return new FlowExpertType(owner.GetElementAt(info, index));}
			public FlowExpertType First { get  {return new FlowExpertType(owner.GetElementFirst(info));} }
			public FlowExpertType Last { get {return new FlowExpertType(owner.GetElementLast(info));} }
			public FlowExpertType Append(){return new FlowExpertType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowExpertType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FlowLock FlowLock;
		public class MemberElement_FlowLock : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowLock (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowLockType this [int i] { get { return At(i);} } 
			public FlowLockType At(int index) {return new FlowLockType(owner.GetElementAt(info, index));}
			public FlowLockType First { get  {return new FlowLockType(owner.GetElementFirst(info));} }
			public FlowLockType Last { get {return new FlowLockType(owner.GetElementLast(info));} }
			public FlowLockType Append(){return new FlowLockType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowLockType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FlowName FlowName;
		public class MemberElement_FlowName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowNameType this [int i] { get { return At(i);} } 
			public FlowNameType At(int index) {return new FlowNameType(owner.GetElementAt(info, index));}
			public FlowNameType First { get  {return new FlowNameType(owner.GetElementFirst(info));} }
			public FlowNameType Last { get {return new FlowNameType(owner.GetElementLast(info));} }
			public FlowNameType Append(){return new FlowNameType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Message Message;
		public class MemberElement_Message : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Message (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageType this [int i] { get { return At(i);} } 
			public MessageType At(int index) {return new MessageType(owner.GetElementAt(info, index));}
			public MessageType First { get  {return new MessageType(owner.GetElementFirst(info));} }
			public MessageType Last { get {return new MessageType(owner.GetElementLast(info));} }
			public MessageType Append(){return new MessageType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MessageLevel MessageLevel;
		public class MemberElement_MessageLevel : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MessageLevel (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageLevelType this [int i] { get { return At(i);} } 
			public MessageLevelType At(int index) {return new MessageLevelType(owner.GetElementAt(info, index));}
			public MessageLevelType First { get  {return new MessageLevelType(owner.GetElementFirst(info));} }
			public MessageLevelType Last { get {return new MessageLevelType(owner.GetElementLast(info));} }
			public MessageLevelType Append(){return new MessageLevelType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageLevelType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MessageNumber MessageNumber;
		public class MemberElement_MessageNumber : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MessageNumber (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageNumberType this [int i] { get { return At(i);} } 
			public MessageNumberType At(int index) {return new MessageNumberType(owner.GetElementAt(info, index));}
			public MessageNumberType First { get  {return new MessageNumberType(owner.GetElementFirst(info));} }
			public MessageNumberType Last { get {return new MessageNumberType(owner.GetElementLast(info));} }
			public MessageNumberType Append(){return new MessageNumberType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageNumberType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MessageParameter MessageParameter;
		public class MemberElement_MessageParameter : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MessageParameter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageParameterType this [int i] { get { return At(i);} } 
			public MessageParameterType At(int index) {return new MessageParameterType(owner.GetElementAt(info, index));}
			public MessageParameterType First { get  {return new MessageParameterType(owner.GetElementFirst(info));} }
			public MessageParameterType Last { get {return new MessageParameterType(owner.GetElementLast(info));} }
			public MessageParameterType Append(){return new MessageParameterType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageParameterType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MessageStatus MessageStatus;
		public class MemberElement_MessageStatus : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MessageStatus (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageStatusType this [int i] { get { return At(i);} } 
			public MessageStatusType At(int index) {return new MessageStatusType(owner.GetElementAt(info, index));}
			public MessageStatusType First { get  {return new MessageStatusType(owner.GetElementFirst(info));} }
			public MessageStatusType Last { get {return new MessageStatusType(owner.GetElementLast(info));} }
			public MessageStatusType Append(){return new MessageStatusType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageStatusType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MessageType2 MessageType2;
		public class MemberElement_MessageType2 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MessageType2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageTypeType this [int i] { get { return At(i);} } 
			public MessageTypeType At(int index) {return new MessageTypeType(owner.GetElementAt(info, index));}
			public MessageTypeType First { get  {return new MessageTypeType(owner.GetElementFirst(info));} }
			public MessageTypeType Last { get {return new MessageTypeType(owner.GetElementLast(info));} }
			public MessageTypeType Append(){return new MessageTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OutputName OutputName;
		public class MemberElement_OutputName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OutputName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public OutputNameType this [int i] { get { return At(i);} } 
			public OutputNameType At(int index) {return new OutputNameType(owner.GetElementAt(info, index));}
			public OutputNameType First { get  {return new OutputNameType(owner.GetElementFirst(info));} }
			public OutputNameType Last { get {return new OutputNameType(owner.GetElementLast(info));} }
			public OutputNameType Append(){return new OutputNameType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new OutputNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OutputValues OutputValues;
		public class MemberElement_OutputValues : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OutputValues (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public OutputValuesType this [int i] { get { return At(i);} } 
			public OutputValuesType At(int index) {return new OutputValuesType(owner.GetElementAt(info, index));}
			public OutputValuesType First { get  {return new OutputValuesType(owner.GetElementFirst(info));} }
			public OutputValuesType Last { get {return new OutputValuesType(owner.GetElementLast(info));} }
			public OutputValuesType Append(){return new OutputValuesType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new OutputValuesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Protocol Protocol;
		public class MemberElement_Protocol : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Protocol (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ProtocolType this [int i] { get { return At(i);} } 
			public ProtocolType At(int index) {return new ProtocolType(owner.GetElementAt(info, index));}
			public ProtocolType First { get  {return new ProtocolType(owner.GetElementFirst(info));} }
			public ProtocolType Last { get {return new ProtocolType(owner.GetElementLast(info));} }
			public ProtocolType Append(){return new ProtocolType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ProtocolType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Sequence Sequence;
		public class MemberElement_Sequence : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Sequence (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public SequenceType this [int i] { get { return At(i);} } 
			public SequenceType At(int index) {return new SequenceType(owner.GetElementAt(info, index));}
			public SequenceType First { get  {return new SequenceType(owner.GetElementFirst(info));} }
			public SequenceType Last { get {return new SequenceType(owner.GetElementLast(info));} }
			public SequenceType Append(){return new SequenceType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new SequenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_StreamNodes StreamNodes;
		public class MemberElement_StreamNodes : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_StreamNodes (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public StreamNodesType this [int i] { get { return At(i);} } 
			public StreamNodesType At(int index) {return new StreamNodesType(owner.GetElementAt(info, index));}
			public StreamNodesType First { get  {return new StreamNodesType(owner.GetElementFirst(info));} }
			public StreamNodesType Last { get {return new StreamNodesType(owner.GetElementLast(info));} }
			public StreamNodesType Append(){return new StreamNodesType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new StreamNodesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("multiTable2oneXML_spy", "")); 				
		}
		
	} // class multiTable2oneXML_spy2
	public class BulkSqlType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_BulkSqlType]); }}

	
		public BulkSqlType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new BulkSqlType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_BulkSqlType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_BulkSqlType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
		
	} // class BulkSqlType
	public class BulkSqlType2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_BulkSqlType2]); }}

	
		public BulkSqlType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class BulkSqlType2
	public class ConditionType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_ConditionType]); }}

	
		public ConditionType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ConditionType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_ConditionType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_ConditionType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
		
	} // class ConditionType
	public class ConditionType2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_ConditionType2]); }}

	
		public ConditionType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ConditionType2
	public class ExpertDefinesType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_ExpertDefinesType]); }}

	
		public ExpertDefinesType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			FlowDesigners = new MemberElement_FlowDesigners (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_ExpertDefinesType_altova_FlowDesigners]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ExpertDefinesType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_FlowDesigners FlowDesigners;
		public class MemberElement_FlowDesigners : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowDesigners (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowDesignersType this [int i] { get { return At(i);} } 
			public FlowDesignersType At(int index) {return new FlowDesignersType(owner.GetElementAt(info, index));}
			public FlowDesignersType First { get  {return new FlowDesignersType(owner.GetElementFirst(info));} }
			public FlowDesignersType Last { get {return new FlowDesignersType(owner.GetElementLast(info));} }
			public FlowDesignersType Append(){return new FlowDesignersType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowDesignersType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class ExpertDefinesType
	public class FlowDesignersType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_FlowDesignersType]); }}

	
		public FlowDesignersType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Sequence = new MemberElement_Sequence (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowDesignersType_altova_Sequence]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new FlowDesignersType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Sequence Sequence;
		public class MemberElement_Sequence : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Sequence (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public SequenceType this [int i] { get { return At(i);} } 
			public SequenceType At(int index) {return new SequenceType(owner.GetElementAt(info, index));}
			public SequenceType First { get  {return new SequenceType(owner.GetElementFirst(info));} }
			public SequenceType Last { get {return new SequenceType(owner.GetElementLast(info));} }
			public SequenceType Append(){return new SequenceType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new SequenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class FlowDesignersType
	public class FieldType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_FieldType]); }}

	
		public FieldType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			MessageNumber = new MemberElement_MessageNumber (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldType_altova_MessageNumber]);
			MessageParameter = new MemberElement_MessageParameter (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldType_altova_MessageParameter]);
			FieldNumber = new MemberElement_FieldNumber (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldType_altova_FieldNumber]);
			FieldName = new MemberElement_FieldName (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldType_altova_FieldName]);
			FieldType2 = new MemberElement_FieldType2 (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldType_altova_FieldType2]);
			FieldLength = new MemberElement_FieldLength (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldType_altova_FieldLength]);
			BulkSql = new MemberElement_BulkSql (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldType_altova_BulkSql]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new FieldType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_MessageNumber MessageNumber;
		public class MemberElement_MessageNumber : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MessageNumber (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageNumberType this [int i] { get { return At(i);} } 
			public MessageNumberType At(int index) {return new MessageNumberType(owner.GetElementAt(info, index));}
			public MessageNumberType First { get  {return new MessageNumberType(owner.GetElementFirst(info));} }
			public MessageNumberType Last { get {return new MessageNumberType(owner.GetElementLast(info));} }
			public MessageNumberType Append(){return new MessageNumberType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageNumberType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MessageParameter MessageParameter;
		public class MemberElement_MessageParameter : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MessageParameter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageParameterType this [int i] { get { return At(i);} } 
			public MessageParameterType At(int index) {return new MessageParameterType(owner.GetElementAt(info, index));}
			public MessageParameterType First { get  {return new MessageParameterType(owner.GetElementFirst(info));} }
			public MessageParameterType Last { get {return new MessageParameterType(owner.GetElementLast(info));} }
			public MessageParameterType Append(){return new MessageParameterType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageParameterType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FieldNumber FieldNumber;
		public class MemberElement_FieldNumber : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FieldNumber (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FieldNumberType this [int i] { get { return At(i);} } 
			public FieldNumberType At(int index) {return new FieldNumberType(owner.GetElementAt(info, index));}
			public FieldNumberType First { get  {return new FieldNumberType(owner.GetElementFirst(info));} }
			public FieldNumberType Last { get {return new FieldNumberType(owner.GetElementLast(info));} }
			public FieldNumberType Append(){return new FieldNumberType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FieldNumberType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FieldName FieldName;
		public class MemberElement_FieldName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FieldName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FieldNameType this [int i] { get { return At(i);} } 
			public FieldNameType At(int index) {return new FieldNameType(owner.GetElementAt(info, index));}
			public FieldNameType First { get  {return new FieldNameType(owner.GetElementFirst(info));} }
			public FieldNameType Last { get {return new FieldNameType(owner.GetElementLast(info));} }
			public FieldNameType Append(){return new FieldNameType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FieldNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FieldType2 FieldType2;
		public class MemberElement_FieldType2 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FieldType2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FieldTypeType this [int i] { get { return At(i);} } 
			public FieldTypeType At(int index) {return new FieldTypeType(owner.GetElementAt(info, index));}
			public FieldTypeType First { get  {return new FieldTypeType(owner.GetElementFirst(info));} }
			public FieldTypeType Last { get {return new FieldTypeType(owner.GetElementLast(info));} }
			public FieldTypeType Append(){return new FieldTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FieldTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FieldLength FieldLength;
		public class MemberElement_FieldLength : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FieldLength (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FieldLengthType this [int i] { get { return At(i);} } 
			public FieldLengthType At(int index) {return new FieldLengthType(owner.GetElementAt(info, index));}
			public FieldLengthType First { get  {return new FieldLengthType(owner.GetElementFirst(info));} }
			public FieldLengthType Last { get {return new FieldLengthType(owner.GetElementLast(info));} }
			public FieldLengthType Append(){return new FieldLengthType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FieldLengthType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_BulkSql BulkSql;
		public class MemberElement_BulkSql : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_BulkSql (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public BulkSqlType this [int i] { get { return At(i);} } 
			public BulkSqlType At(int index) {return new BulkSqlType(owner.GetElementAt(info, index));}
			public BulkSqlType First { get  {return new BulkSqlType(owner.GetElementFirst(info));} }
			public BulkSqlType Last { get {return new BulkSqlType(owner.GetElementLast(info));} }
			public BulkSqlType Append(){return new BulkSqlType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new BulkSqlType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class FieldType
	public class MessageNumberType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_MessageNumberType]); }}

	
		public MessageNumberType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new MessageNumberType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageNumberType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageNumberType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class MessageNumberType
	public class MessageParameterType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_MessageParameterType]); }}

	
		public MessageParameterType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new MessageParameterType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageParameterType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageParameterType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class MessageParameterType
	public class FieldNumberType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_FieldNumberType]); }}

	
		public FieldNumberType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new FieldNumberType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldNumberType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldNumberType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class FieldNumberType
	public class FieldNameType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_FieldNameType]); }}

	
		public FieldNameType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new FieldNameType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldNameType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldNameType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class FieldNameType
	public class FieldTypeType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_FieldTypeType]); }}

	
		public FieldTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new FieldTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldTypeType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldTypeType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class FieldTypeType
	public class FieldLengthType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_FieldLengthType]); }}

	
		public FieldLengthType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new FieldLengthType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldLengthType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FieldLengthType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class FieldLengthType
	public class FlowDefineType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_FlowDefineType]); }}

	
		public FlowDefineType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			FlowName = new MemberElement_FlowName (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowDefineType_altova_FlowName]);
			FlowExpert = new MemberElement_FlowExpert (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowDefineType_altova_FlowExpert]);
			FlowLock = new MemberElement_FlowLock (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowDefineType_altova_FlowLock]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new FlowDefineType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_FlowName FlowName;
		public class MemberElement_FlowName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowNameType this [int i] { get { return At(i);} } 
			public FlowNameType At(int index) {return new FlowNameType(owner.GetElementAt(info, index));}
			public FlowNameType First { get  {return new FlowNameType(owner.GetElementFirst(info));} }
			public FlowNameType Last { get {return new FlowNameType(owner.GetElementLast(info));} }
			public FlowNameType Append(){return new FlowNameType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FlowExpert FlowExpert;
		public class MemberElement_FlowExpert : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowExpert (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowExpertType this [int i] { get { return At(i);} } 
			public FlowExpertType At(int index) {return new FlowExpertType(owner.GetElementAt(info, index));}
			public FlowExpertType First { get  {return new FlowExpertType(owner.GetElementFirst(info));} }
			public FlowExpertType Last { get {return new FlowExpertType(owner.GetElementLast(info));} }
			public FlowExpertType Append(){return new FlowExpertType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowExpertType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FlowLock FlowLock;
		public class MemberElement_FlowLock : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowLock (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowLockType this [int i] { get { return At(i);} } 
			public FlowLockType At(int index) {return new FlowLockType(owner.GetElementAt(info, index));}
			public FlowLockType First { get  {return new FlowLockType(owner.GetElementFirst(info));} }
			public FlowLockType Last { get {return new FlowLockType(owner.GetElementLast(info));} }
			public FlowLockType Append(){return new FlowLockType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowLockType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class FlowDefineType
	public class FlowNameType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_FlowNameType]); }}

	
		public FlowNameType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new FlowNameType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowNameType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowNameType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class FlowNameType
	public class FlowExpertType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_FlowExpertType]); }}

	
		public FlowExpertType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new FlowExpertType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowExpertType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowExpertType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class FlowExpertType
	public class FlowLockType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_FlowLockType]); }}

	
		public FlowLockType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new FlowLockType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowLockType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowLockType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class FlowLockType
	public class FlowDisignerType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_FlowDisignerType]); }}

	
		public FlowDisignerType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			FlowDefine = new MemberElement_FlowDefine (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowDisignerType_altova_FlowDefine]);
			StreamNodes = new MemberElement_StreamNodes (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowDisignerType_altova_StreamNodes]);
			OutputValues = new MemberElement_OutputValues (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_FlowDisignerType_altova_OutputValues]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new FlowDisignerType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_FlowDefine FlowDefine;
		public class MemberElement_FlowDefine : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowDefine (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowDefineType this [int i] { get { return At(i);} } 
			public FlowDefineType At(int index) {return new FlowDefineType(owner.GetElementAt(info, index));}
			public FlowDefineType First { get  {return new FlowDefineType(owner.GetElementFirst(info));} }
			public FlowDefineType Last { get {return new FlowDefineType(owner.GetElementLast(info));} }
			public FlowDefineType Append(){return new FlowDefineType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowDefineType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_StreamNodes StreamNodes;
		public class MemberElement_StreamNodes : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_StreamNodes (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public StreamNodesType this [int i] { get { return At(i);} } 
			public StreamNodesType At(int index) {return new StreamNodesType(owner.GetElementAt(info, index));}
			public StreamNodesType First { get  {return new StreamNodesType(owner.GetElementFirst(info));} }
			public StreamNodesType Last { get {return new StreamNodesType(owner.GetElementLast(info));} }
			public StreamNodesType Append(){return new StreamNodesType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new StreamNodesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OutputValues OutputValues;
		public class MemberElement_OutputValues : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OutputValues (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public OutputValuesType this [int i] { get { return At(i);} } 
			public OutputValuesType At(int index) {return new OutputValuesType(owner.GetElementAt(info, index));}
			public OutputValuesType First { get  {return new OutputValuesType(owner.GetElementFirst(info));} }
			public OutputValuesType Last { get {return new OutputValuesType(owner.GetElementLast(info));} }
			public OutputValuesType Append(){return new OutputValuesType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new OutputValuesType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class FlowDisignerType
	public class StreamNodesType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_StreamNodesType]); }}

	
		public StreamNodesType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Sequence = new MemberElement_Sequence (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_StreamNodesType_altova_Sequence]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new StreamNodesType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Sequence Sequence;
		public class MemberElement_Sequence : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Sequence (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public SequenceType this [int i] { get { return At(i);} } 
			public SequenceType At(int index) {return new SequenceType(owner.GetElementAt(info, index));}
			public SequenceType First { get  {return new SequenceType(owner.GetElementFirst(info));} }
			public SequenceType Last { get {return new SequenceType(owner.GetElementLast(info));} }
			public SequenceType Append(){return new SequenceType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new SequenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class StreamNodesType
	public class OutputValuesType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_OutputValuesType]); }}

	
		public OutputValuesType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Sequence = new MemberElement_Sequence (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_OutputValuesType_altova_Sequence]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new OutputValuesType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Sequence Sequence;
		public class MemberElement_Sequence : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Sequence (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public SequenceType this [int i] { get { return At(i);} } 
			public SequenceType At(int index) {return new SequenceType(owner.GetElementAt(info, index));}
			public SequenceType First { get  {return new SequenceType(owner.GetElementFirst(info));} }
			public SequenceType Last { get {return new SequenceType(owner.GetElementLast(info));} }
			public SequenceType Append(){return new SequenceType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new SequenceType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class OutputValuesType
	public class MessageType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_MessageType]); }}

	
		public MessageType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Protocol = new MemberElement_Protocol (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageType_altova_Protocol]);
			MessageType2 = new MemberElement_MessageType2 (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageType_altova_MessageType2]);
			Condition = new MemberElement_Condition (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageType_altova_Condition]);
			OutputName = new MemberElement_OutputName (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageType_altova_OutputName]);
			MessageLevel = new MemberElement_MessageLevel (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageType_altova_MessageLevel]);
			MessageStatus = new MemberElement_MessageStatus (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageType_altova_MessageStatus]);
			MessageNumber = new MemberElement_MessageNumber (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageType_altova_MessageNumber]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new MessageType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Protocol Protocol;
		public class MemberElement_Protocol : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Protocol (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ProtocolType this [int i] { get { return At(i);} } 
			public ProtocolType At(int index) {return new ProtocolType(owner.GetElementAt(info, index));}
			public ProtocolType First { get  {return new ProtocolType(owner.GetElementFirst(info));} }
			public ProtocolType Last { get {return new ProtocolType(owner.GetElementLast(info));} }
			public ProtocolType Append(){return new ProtocolType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ProtocolType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MessageType2 MessageType2;
		public class MemberElement_MessageType2 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MessageType2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageTypeType this [int i] { get { return At(i);} } 
			public MessageTypeType At(int index) {return new MessageTypeType(owner.GetElementAt(info, index));}
			public MessageTypeType First { get  {return new MessageTypeType(owner.GetElementFirst(info));} }
			public MessageTypeType Last { get {return new MessageTypeType(owner.GetElementLast(info));} }
			public MessageTypeType Append(){return new MessageTypeType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Condition Condition;
		public class MemberElement_Condition : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Condition (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ConditionType this [int i] { get { return At(i);} } 
			public ConditionType At(int index) {return new ConditionType(owner.GetElementAt(info, index));}
			public ConditionType First { get  {return new ConditionType(owner.GetElementFirst(info));} }
			public ConditionType Last { get {return new ConditionType(owner.GetElementLast(info));} }
			public ConditionType Append(){return new ConditionType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ConditionType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_OutputName OutputName;
		public class MemberElement_OutputName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_OutputName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public OutputNameType this [int i] { get { return At(i);} } 
			public OutputNameType At(int index) {return new OutputNameType(owner.GetElementAt(info, index));}
			public OutputNameType First { get  {return new OutputNameType(owner.GetElementFirst(info));} }
			public OutputNameType Last { get {return new OutputNameType(owner.GetElementLast(info));} }
			public OutputNameType Append(){return new OutputNameType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new OutputNameType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MessageLevel MessageLevel;
		public class MemberElement_MessageLevel : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MessageLevel (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageLevelType this [int i] { get { return At(i);} } 
			public MessageLevelType At(int index) {return new MessageLevelType(owner.GetElementAt(info, index));}
			public MessageLevelType First { get  {return new MessageLevelType(owner.GetElementFirst(info));} }
			public MessageLevelType Last { get {return new MessageLevelType(owner.GetElementLast(info));} }
			public MessageLevelType Append(){return new MessageLevelType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageLevelType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MessageStatus MessageStatus;
		public class MemberElement_MessageStatus : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MessageStatus (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageStatusType this [int i] { get { return At(i);} } 
			public MessageStatusType At(int index) {return new MessageStatusType(owner.GetElementAt(info, index));}
			public MessageStatusType First { get  {return new MessageStatusType(owner.GetElementFirst(info));} }
			public MessageStatusType Last { get {return new MessageStatusType(owner.GetElementLast(info));} }
			public MessageStatusType Append(){return new MessageStatusType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageStatusType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_MessageNumber MessageNumber;
		public class MemberElement_MessageNumber : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_MessageNumber (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageNumberType this [int i] { get { return At(i);} } 
			public MessageNumberType At(int index) {return new MessageNumberType(owner.GetElementAt(info, index));}
			public MessageNumberType First { get  {return new MessageNumberType(owner.GetElementFirst(info));} }
			public MessageNumberType Last { get {return new MessageNumberType(owner.GetElementLast(info));} }
			public MessageNumberType Append(){return new MessageNumberType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageNumberType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class MessageType
	public class ProtocolType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_ProtocolType]); }}

	
		public ProtocolType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ProtocolType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_ProtocolType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_ProtocolType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class ProtocolType
	public class MessageTypeType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_MessageTypeType]); }}

	
		public MessageTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new MessageTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageTypeType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageTypeType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class MessageTypeType
	public class OutputNameType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_OutputNameType]); }}

	
		public OutputNameType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new OutputNameType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_OutputNameType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_OutputNameType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class OutputNameType
	public class MessageLevelType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_MessageLevelType]); }}

	
		public MessageLevelType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new MessageLevelType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageLevelType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageLevelType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class MessageLevelType
	public class MessageStatusType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_MessageStatusType]); }}

	
		public MessageStatusType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new MessageStatusType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageStatusType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_MessageStatusType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class MessageStatusType
	public class SequenceType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_altova_SequenceType]); }}

	
		public SequenceType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Field = new MemberElement_Field (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_SequenceType_altova_Field]);
			FlowDisigner = new MemberElement_FlowDisigner (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_SequenceType_altova_FlowDisigner]);
			Message = new MemberElement_Message (this, multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_altova_SequenceType_altova_Message]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new SequenceType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Field Field;
		public class MemberElement_Field : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Field (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FieldType this [int i] { get { return At(i);} } 
			public FieldType At(int index) {return new FieldType(owner.GetElementAt(info, index));}
			public FieldType First { get  {return new FieldType(owner.GetElementFirst(info));} }
			public FieldType Last { get {return new FieldType(owner.GetElementLast(info));} }
			public FieldType Append(){return new FieldType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FieldType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_FlowDisigner FlowDisigner;
		public class MemberElement_FlowDisigner : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_FlowDisigner (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public FlowDisignerType this [int i] { get { return At(i);} } 
			public FlowDisignerType At(int index) {return new FlowDisignerType(owner.GetElementAt(info, index));}
			public FlowDisignerType First { get  {return new FlowDisignerType(owner.GetElementFirst(info));} }
			public FlowDisignerType Last { get {return new FlowDisignerType(owner.GetElementLast(info));} }
			public FlowDisignerType Append(){return new FlowDisignerType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new FlowDisignerType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Message Message;
		public class MemberElement_Message : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Message (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public MessageType this [int i] { get { return At(i);} } 
			public MessageType At(int index) {return new MessageType(owner.GetElementAt(info, index));}
			public MessageType First { get  {return new MessageType(owner.GetElementFirst(info));} }
			public MessageType Last { get {return new MessageType(owner.GetElementLast(info));} }
			public MessageType Append(){return new MessageType(owner.CreateElement(info));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new MessageType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class SequenceType

namespace xs
{	
	public class ENTITIES : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_ENTITIES]); }}

	
		public ENTITIES(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITIES
	public class ENTITY : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_ENTITY]); }}

	
		public ENTITY(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITY
	public class ID : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_ID]); }}

	
		public ID(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ID
	public class IDREF : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_IDREF]); }}

	
		public IDREF(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREF
	public class IDREFS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_IDREFS]); }}

	
		public IDREFS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREFS
	public class NCName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_NCName]); }}

	
		public NCName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NCName
	public class NMTOKEN : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_NMTOKEN]); }}

	
		public NMTOKEN(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKEN
	public class NMTOKENS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_NMTOKENS]); }}

	
		public NMTOKENS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKENS
	public class NOTATION : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_NOTATION]); }}

	
		public NOTATION(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NOTATION
	public class Name : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_Name]); }}

	
		public Name(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class Name
	public class QName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_QName]); }}

	
		public QName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class QName
	public class anySimpleType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_anySimpleType]); }}

	
		public anySimpleType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anySimpleType
	public class anyType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_anyType]); }}

	
		public anyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new anyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
	public string Value
	{
		get 
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
			return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
		}
		set
		{
			Altova.TypeInfo.MemberInfo member = multiTable2oneXML_spy_TypeInfo.binder.Members[multiTable2oneXML_spy_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
			Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
		}
	}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anyType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class anyType
	public class anyURI : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_anyURI]); }}

	
		public anyURI(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anyURI
	public class base64Binary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_base64Binary]); }}

	
		public base64Binary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class base64Binary
	public class boolean : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_boolean]); }}

	
		public boolean(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class boolean
	public class byte2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_byte2]); }}

	
		public byte2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class byte2
	public class date : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_date]); }}

	
		public date(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class date
	public class dateTime : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_dateTime]); }}

	
		public dateTime(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class dateTime
	public class decimal2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_decimal2]); }}

	
		public decimal2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class decimal2
	public class double2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_double2]); }}

	
		public double2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class double2
	public class duration : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_duration]); }}

	
		public duration(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class duration
	public class float2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_float2]); }}

	
		public float2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class float2
	public class gDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_gDay]); }}

	
		public gDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gDay
	public class gMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_gMonth]); }}

	
		public gMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonth
	public class gMonthDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_gMonthDay]); }}

	
		public gMonthDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonthDay
	public class gYear : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_gYear]); }}

	
		public gYear(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYear
	public class gYearMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_gYearMonth]); }}

	
		public gYearMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYearMonth
	public class hexBinary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_hexBinary]); }}

	
		public hexBinary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class hexBinary
	public class int2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_int2]); }}

	
		public int2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class int2
	public class integer : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_integer]); }}

	
		public integer(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class integer
	public class language : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_language]); }}

	
		public language(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class language
	public class long2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_long2]); }}

	
		public long2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class long2
	public class negativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_negativeInteger]); }}

	
		public negativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class negativeInteger
	public class nonNegativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_nonNegativeInteger]); }}

	
		public nonNegativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonNegativeInteger
	public class nonPositiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_nonPositiveInteger]); }}

	
		public nonPositiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonPositiveInteger
	public class normalizedString : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_normalizedString]); }}

	
		public normalizedString(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class normalizedString
	public class positiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_positiveInteger]); }}

	
		public positiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class positiveInteger
	public class short2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_short2]); }}

	
		public short2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class short2
	public class string2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_string2]); }}

	
		public string2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class string2
	public class time : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_time]); }}

	
		public time(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class time
	public class token : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_token]); }}

	
		public token(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class token
	public class unsignedByte : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_unsignedByte]); }}

	
		public unsignedByte(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedByte
	public class unsignedInt : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_unsignedInt]); }}

	
		public unsignedInt(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedInt
	public class unsignedLong : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_unsignedLong]); }}

	
		public unsignedLong(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedLong
	public class unsignedShort : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(multiTable2oneXML_spy_TypeInfo.binder.Types[multiTable2oneXML_spy_TypeInfo._altova_ti_xs_altova_unsignedShort]); }}

	
		public unsignedShort(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedShort

} // namespace xs


}
